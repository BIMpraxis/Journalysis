<Workspace Version="1.3.1.1736" X="0" Y="0" zoom="1" ScaleFactor="1" Name="Journal.LoadedAssemblies" Description="Pulls a list of all loaded assemblies (i.e. addin DLLs) from a given journal" ID="ef6753f4-b23f-4152-b90f-1e9b36af09cd" Category="Journalysis.Journal.Actions">
  <NamespaceResolutionMap>
    <ClassMap partialName="File" resolvedName="DSCore.IO.File" assemblyName="DSCoreNodes.dll" />
    <ClassMap partialName="System.IO.FileInfo" resolvedName="System.IO.FileInfo" assemblyName="" />
    <ClassMap partialName="List.Empty" resolvedName="DSCore.List" assemblyName="DSCoreNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <PythonNodeModels.PythonNode guid="e43d3b05-aeee-43dc-a23b-1b467122b953" type="PythonNodeModels.PythonNode" nickname="Python Script" x="206.5" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr

class LoadedAssembly:
	def __init__(self, name, classname, path, vendor, initialEvent):
		self.Name = name
		self.Class = classname
		self.Path = path
		self.Filename = path.split("\\")[-1]
		self.Vendor = vendor
		self.GUID = None
		self.Events = [initialEvent]
	def __repr__(self):
		return "LoadedAssembly"

journal = IN[0]
loadedAssemblies = []
replacedCommands = {}
OUT = []
apimsgs = journal.GetLinesByType("JournalAPIMessage")

for apimsg in apimsgs:
	if apimsg.MessageText.startswith("Starting"):
		startdata1 = apimsg.MessageText.split("Application: ")[-1].split(", Class: ")
		startdata2 = startdata1[-1].split(", Vendor : ")
		startdata3 = startdata2[-1].split(", Assembly: ") 
		appname = startdata1[0]
		classname = startdata2[0]
		path = startdata3[-1]
		vendor = startdata3[0]
		loadedAssemblies.append(LoadedAssembly(appname, classname, path, vendor, apimsg))
		
for apimsg in apimsgs:
	if apimsg.MessageText.startswith("Registering") or apimsg.MessageText.startswith("Unregistering") or apimsg.MessageText.startswith("API registering") or apimsg.MessageText.startswith("API unregistering"):
		regevt = apimsg.MessageText.split("by application ")[-1].rsplit(" (",1)
		appname = regevt[0]
		appguid = regevt[1][:-2]
		foundByGUID = [x for x in loadedAssemblies if x.GUID == appguid]
		if len(foundByGUID) &gt; 0: foundByGUID[0].Events.append(apimsg)
		else:
			foundByName = [x for x in loadedAssemblies if x.Name == appname and x.GUID == None]
			if len(foundByName) &gt; 0:
				foundByName[0].GUID = appguid
				foundByName[0].Events.append(apimsg)
	elif apimsg.MessageText.startswith("Replacing"):
		replname = apimsg.MessageText.split("from application '",1)[-1].split("'",1)[0]
		replcommand = apimsg.MessageText.split("Replacing command id '",1)[-1].split("'",1)[0]
		foundByName = [x for x in loadedAssemblies if x.Name == replname]
		if len(foundByName) &gt; 0: 
			foundByName[0].Events.append(apimsg)
			replacedCommands[replcommand] = foundByName[0]
	elif apimsg.MessageText.startswith("Restoring"):
		restcommand = apimsg.MessageText.split("Restoring command id '",1)[-1].split("'",1)[0]
		if restcommand in replacedCommands:
			replacedCommands[restcommand].Events.append(apimsg)
	elif apimsg.MessageText.startswith("Added pushbutton"):
		pbpath = apimsg.MessageText.split(", ")[-1].replace("assembly: ","").replace("assembly ","")
		foundByPath = [x for x in loadedAssemblies if x.Path == pbpath]
		if len(foundByPath) &gt; 0: foundByPath[0].Events.append(apimsg)
		else:
			foundByFilename = [x for x in loadedAssemblies if x.Filename == pbpath.rsplit("\\",1)[-1]]
			if len(foundByFilename) &gt; 0: foundByFilename[0].Events.append(apimsg)
	elif apimsg.MessageText.startswith("System."):
		excguid = apimsg.MessageText.split("). Changes made by this handler are going to be discarded.",1)[0].rsplit(" (",1)[-1]
		foundByGUID = [x for x in loadedAssemblies if x.GUID == excguid]
		if len(foundByGUID) &gt; 0: foundByGUID[0].Events.append(apimsg)

OUT = loadedAssemblies</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="7b909dab-e91d-480b-a77e-183cccd892ba" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="18.5" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="journal" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="f0224129-5bb9-4103-8919-17ad3749d245" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="430.5" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="seq" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="e43d3b05-aeee-43dc-a23b-1b467122b953" start_index="0" end="f0224129-5bb9-4103-8919-17ad3749d245" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7b909dab-e91d-480b-a77e-183cccd892ba" start_index="0" end="e43d3b05-aeee-43dc-a23b-1b467122b953" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>